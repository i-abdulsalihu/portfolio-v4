"use client";

import { motion } from "framer-motion";
import { usePathname } from "next/navigation";
import { useEffect, useState, useRef, Fragment } from "react";

import { useCursorPosition } from "@/hooks/cursor-position.hook";

const Cursor = () => {
  const pathname = usePathname();
  const cursorRef = useRef<SVGSVGElement | null>(null);
  const { x, y, angle } = useCursorPosition();
  const [isPointer, setIsPointer] = useState(false);

  useEffect(() => {
    if (!cursorRef.current) return;
    if (!isPointer) {
      cursorRef.current.style.transform = `translate(${x}px, ${y}px)`;
    } else {
      cursorRef.current.style.transform = `translate(${x}px, ${y}px) rotate(${angle}deg)`;
    }
  }, [x, y, angle, isPointer]);

  useEffect(() => {
    const interactiveElements = document.querySelectorAll(
      'a, button, [data-cursor="pointer"], [role="button"]'
    );

    const handleMouseEnter = () => setIsPointer(true);
    const handleMouseLeave = () => setIsPointer(false);

    interactiveElements.forEach((el) => {
      el.addEventListener("mouseenter", handleMouseEnter);
      el.addEventListener("mouseleave", handleMouseLeave);
    });

    return () => {
      interactiveElements.forEach((el) => {
        el.removeEventListener("mouseenter", handleMouseEnter);
        el.removeEventListener("mouseleave", handleMouseLeave);
      });
    };
  }, [pathname]);

  return (
    <motion.svg
      animate={{
        x: x - 10,
        y: y - 10,
        rotate: isPointer ? 0 : angle,
      }}
      transition={{
        type: "spring",
        damping: 100,
        stiffness: 2500,
      }}
      ref={cursorRef}
      viewBox="0 0 24 24"
      id="cursor"
      className="pointer-events-none fixed z-[9999] hidden size-5 fill-white mix-blend-difference md:block"
    >
      {isPointer ? <PointerCursor /> : <DefaultCursor />}
    </motion.svg>
  );
};

export default Cursor;

const PointerCursor = () => {
  return (
    <Fragment>
      <path
        d="M5.5557,13.8667c0.2314-0.5015,0.0127-1.0957-0.4893-1.3271c-1.1826-0.5464-1.9756-1.6899-2.0684-2.9844
C2.9297,8.604,3.2363,7.6826,3.8613,6.9609c0.626-0.7217,1.4932-1.1567,2.4443-1.2251c1.6309-0.1206,3.1299,0.8857,3.6416,2.4404
c0.1729,0.5249,0.7334,0.8086,1.2637,0.6367c0.5244-0.1729,0.8096-0.7383,0.6367-1.2627
c-0.7998-2.4248-3.1279-3.9966-5.6846-3.8096C4.6787,3.8472,3.3242,4.5259,2.3496,5.6519C1.375,6.7773,0.8975,8.2144,1.0039,9.6987
c0.1445,2.0205,1.3799,3.8052,3.2246,4.6563c0.1357,0.063,0.2783,0.0923,0.418,0.0923
C5.0244,14.4473,5.3867,14.2319,5.5557,13.8667z"
      ></path>
      <path
        d="M22.457,15.043c-0.1145-0.1145-0.2944-0.2495-0.5428-0.3463c0.3457-2.4546-0.6204-4.8754-2.6232-6.3002
c-0.9756-0.6978-1.9824-1.0664-2.9111-1.0664c-1.8691,0-3.9688,1.5483-5.2139,2.6353c-0.1415-0.1129-0.2769-0.2182-0.4158-0.3281
c-0.0448-0.043-0.0855-0.0894-0.1394-0.1246c-0.0118-0.0077-0.0256-0.0079-0.0375-0.015c-0.9792-0.7697-1.876-1.4371-2.5098-1.754
L7.1797,7.3071c-0.291-0.1553-0.623-0.2373-0.96-0.2373H6.0996C4.9414,7.0698,4,8.0117,4,9.1699
c0,0.4854,0.1592,0.9404,0.4854,1.3462l2.0996,2.4116c-1.0957,1.0977-1.623,2.2544-1.5713,3.4492
c0.085,1.939,1.6953,3.3223,2.6826,3.9922c0.0049,0.0039,0.0098,0.0078,0.0146,0.0112v0.001
c0.0115,0.0086,0.0255,0.0173,0.0372,0.026c0.0007,0.0005,0.0011,0.0013,0.0018,0.0018c0.0042,0.0028,0.0074,0.0047,0.0116,0.0075
c1.0632,0.7819,2.7333,1.6107,5.0548,1.6107c0.4668,0,0.96-0.0337,1.4795-0.1079c0.0096-0.0014,0.0188-0.004,0.0284-0.0055
c0.0778,0.4031,0.2697,0.6743,0.4344,0.839c0.3301,0.3252,0.7383,0.4658,1.1934,0.4658c1.3467,0,3.0996-1.2363,4.4248-2.5615
c0.9131-0.9136,1.6592-1.9043,2.0986-2.79C23.2451,16.3179,22.8906,15.4761,22.457,15.043z M9.5757,19.2051
c-0.0402-0.0294-0.0693-0.069-0.1147-0.0928c-0.0211-0.0106-0.2555-0.1359-0.5737-0.3495
c-0.0108-0.0078-0.0206-0.0165-0.0318-0.024c-0.5381-0.3599-1.7939-1.3188-1.8438-2.4487
c-0.0297-0.6928,0.4203-1.4369,1.2888-2.212c0.8503,0.611,1.7106,1.2083,2.6066,1.7693c0.1368,0.0857,0.3195,0.0706,0.4403-0.0471
c0.1418-0.1381,0.1448-0.365,0.0067-0.5068l-0.0059-0.006c-1.2314-1.2642-2.3875-2.6404-3.5123-4.0068l-0.0105-0.0131
c-0.0392-0.0471-0.0871-0.0885-0.1359-0.1288L6,9.1699c0-0.0571,0.043-0.1001,0.0996-0.1001l0.167,0.0166l0.9063,0.4482
c0.5132,0.2566,1.4862,0.9984,2.2737,1.6196c0.0208,0.0161,0.0323,0.0393,0.0547,0.054c0.037,0.0242,0.0768,0.0546,0.1145,0.0801
c0.1847,0.1465,0.36,0.2863,0.5073,0.4041l0.4678,0.373c0.0424,0.0334,0.0933,0.0466,0.1396,0.0717
c0.2305,0.189,0.4618,0.3773,0.6829,0.5782c0.6036,0.5558,1.1718,1.1542,1.6172,1.845l0.0043,0.0067
c0.0538,0.0832,0.1571,0.1257,0.2576,0.0978c0.1238-0.0344,0.1964-0.1625,0.162-0.2864c-0.2382-0.8581-0.6348-1.6639-1.0793-2.4307
c-0.0481-0.0819-0.1036-0.1595-0.153-0.2407c0.2701-0.2461,0.5574-0.4924,0.8607-0.7325c0.9642,0.2538,1.9605,0.6895,2.54,1.466
l0.0161,0.0217c0.0921,0.1232,0.2575,0.1767,0.409,0.1204c0.1843-0.0685,0.2781-0.2734,0.2097-0.4576
c-0.2411-0.6491-0.6857-1.1881-1.1719-1.6358c-0.1932-0.1738-0.398-0.3273-0.6044-0.4797c0.1373-0.0804,0.2729-0.1564,0.4077-0.225
c0.7857,0.2628,1.5531,0.6473,2.02,1.271l0.0169,0.0227c0.1078,0.1438,0.3005,0.2073,0.4786,0.1436
c0.2189-0.0784,0.3328-0.3193,0.2545-0.5382c-0.1769-0.494-0.4823-0.9162-0.8209-1.2892c0.4007,0.0978,0.8439,0.3098,1.2919,0.6304
c1.5195,1.0806,2.1787,3.0073,1.7158,4.8999c-0.0773,0.0344-0.1603,0.0858-0.2393,0.1252
c-0.1035,0.0515-0.2061,0.1036-0.3122,0.1633c-0.1609,0.0905-0.324,0.1932-0.4895,0.3016
c-0.1054,0.069-0.2089,0.1338-0.3156,0.2097c-0.1819,0.1293-0.3646,0.2738-0.5484,0.4219
c-0.0922,0.0743-0.1833,0.1409-0.2756,0.2197c-0.2757,0.235-0.551,0.4858-0.8223,0.757c-0.2377,0.2377-0.46,0.4796-0.6711,0.7227
c-0.0736,0.0847-0.1384,0.169-0.2084,0.2539c-0.1309,0.1588-0.2587,0.3168-0.3764,0.4752
c-0.0748,0.1006-0.1422,0.1993-0.2112,0.2993c-0.098,0.1418-0.1909,0.2819-0.2769,0.4217
c-0.0634,0.1031-0.1228,0.2041-0.1792,0.3054c-0.0315,0.0565-0.0709,0.1149-0.1002,0.1708
c-0.2637,0.0713-0.5342,0.1279-0.8105,0.1685C12.039,20.2196,10.5794,19.7675,9.5757,19.2051z M18.9629,19.2432
c-1.0459,1.0449-1.9951,1.6284-2.5586,1.8564c0.0137-0.0327,0.0283-0.0669,0.0439-0.103c0.3145-0.7275,0.9736-1.624,1.8086-2.4595
c0.2756-0.2754,0.5435-0.5156,0.8004-0.7291c0.0865-0.0718,0.1642-0.1249,0.2478-0.19c0.1638-0.1274,0.3278-0.2552,0.478-0.3574
c0.0932-0.0634,0.1753-0.1104,0.2624-0.1642c0.1237-0.0765,0.2483-0.1544,0.3577-0.2123c0.0825-0.0436,0.1534-0.0745,0.2268-0.1079
c0.0643-0.0292,0.1248-0.0549,0.1813-0.0764C20.5823,17.2598,20.0029,18.2026,18.9629,19.2432z"
      ></path>
    </Fragment>
  );
};

const DefaultCursor = () => {
  return (
    <Fragment>
      <path
        d="M20.9697,10.8643c0.1826-1.3604-0.4795-2.6602-1.6875-3.3105c-3.4756-1.8721-7.1885-3.2705-11.0352-4.1582L6.8936,3.083
			C5.8184,2.8359,4.7119,3.1523,3.9316,3.9316C3.1523,4.7119,2.835,5.8184,3.083,6.8926l0.3125,1.3545
			c0.8877,3.8467,2.2861,7.5596,4.1582,11.0342C8.1328,20.3564,9.2246,21,10.417,21c0.1475,0,0.2969-0.0098,0.4473-0.0303
			c1.3604-0.1826,2.4385-1.165,2.7471-2.502l0.79-3.4219c0.0742-0.3232,0.3213-0.5703,0.6445-0.6445l3.4219-0.79
			C19.8047,13.3027,20.7871,12.2246,20.9697,10.8643z M18.9873,10.5977c-0.0273,0.2041-0.1777,0.8818-0.9688,1.0645l-3.4219,0.79
			c-1.0586,0.2451-1.8994,1.0859-2.1445,2.1445l-0.79,3.4219c-0.1826,0.791-0.8604,0.9414-1.0645,0.9688
			c-0.2041,0.0293-0.8984,0.0586-1.2822-0.6533v-0.001c-1.7881-3.3184-3.124-6.8633-3.9707-10.5352L5.0322,6.4424
			C4.9385,6.0391,5.0527,5.6396,5.3467,5.3467C5.5723,5.1201,5.8623,5,6.168,5c0.0908,0,0.1826,0.0107,0.2754,0.0322l1.3545,0.3125
			c3.6719,0.8467,7.2168,2.1826,10.5361,3.9707C19.0488,9.7002,19.0146,10.3945,18.9873,10.5977z"
      ></path>
      <path d="M17 16c-.5527 0-1 .4473-1 1s.4473 1 1 1h2c.5527 0 1-.4473 1-1s-.4473-1-1-1H17zM21 19h-4c-.5527 0-1 .4473-1 1s.4473 1 1 1h4c.5527 0 1-.4473 1-1S21.5527 19 21 19z"></path>
    </Fragment>
  );
};
